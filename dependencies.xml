<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://www.urbancode.com/schema/cs/project-dependencies/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        name="SAP-CTS" workflow="build workflow [air]">

  <dependencies conflictStrategy="FAIL">

    <!-- ############################################################ -->
    <!-- RUNTIME                                                      -->
    <!-- ############################################################ -->

    <!-- the plugin-build.xml -->
    <dependency>
      <ah-project name="air-plugin-build-script" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>.</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="air-plugin-ant-tasks" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="air-plugin-server-common" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <!-- gives us the CommandHelper and XTrust groovies -->
    <dependency>
      <ah-project name="plugins" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Source">
        <directory>lib/build/classes</directory>
      </delivery>
      <delivery artifact-set="Dist">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <!-- ############################################################ -->
    <!-- BUILD                                                        -->
    <!-- ############################################################ -->

    <dependency>
      <cs-project name="Groovy"/>
      <criteria status="success"/>
      <delivery artifact-set="lib">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <!-- This is required for us to build but licensing does not allow us to bundle it in the plugin -->
    <dependency>
      <cs-project name="WMQ CMP API "/>
      <criteria stamp="10.9.0"/>
      <delivery artifact-set="Default">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

<!-- ############################################################ -->
    <!-- TEST                                                         -->
    <!-- ############################################################ -->

    <dependency>
      <ah-project name="air-plugin-command" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-Xml" workflow="build workflow [master]" />
      <criteria status="success" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

   <dependency>
      <cs-project name="Jakarta Commons IO" />
      <criteria stamp="1.4" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
        <directory>lib/validate</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="JUnit"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="spock-core"/>
      <criteria stamp="2.4-rc4"/>
      <delivery artifact-set="lib">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="CGLib"/>
      <criteria stamp="3.2.5"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Objenesis"/>
      <criteria stamp="2.2"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Rhino"/>
      <criteria stamp="*" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Apache-log4j"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Shell" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-FileUtils" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-Util" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib</directory>
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="NativeProcess" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Jars">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Lang"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Codec"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Hamcrest"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <!-- ############################################################ -->
    <!-- USED WITH AXIS FOR SOAP                                      -->
    <!-- ############################################################ -->
<!--
    <dependency>
      <cs-project name="Apache Axis"/>
      <criteria stamp="1.4"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>
    </dependency>
    <dependency>
      <cs-project name="Jakarta Commons Logging"/>
      <criteria stamp="1.1"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>
    </dependency>
    <dependency>
      <cs-project name="Jakarta Commons Discovery"/>
      <criteria stamp="0.2"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>
    </dependency>
-->

    <dependency>
      <cs-project name="Jettison" />
      <criteria status="success" />
      <delivery artifact-set="Library">
        <directory>lib</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name='securedata' workflow='build workflow [master]' />
      <criteria status='success' />
      <delivery artifact-set='Dist'>
        <directory>lib</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="SandboxedJSRuntime" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>lib</directory>
      </delivery>
    </dependency>
  </dependencies>
</project>
